"""add message table

Revision ID: e6174a640536
Revises: 9327be67cff7
Create Date: 2022-05-11 15:19:26.338912

"""
import sqlalchemy as sa
from alembic import op

from ftl_python_lib.models.sql.member import ModelMember
from ftl_python_lib.models.sql.message import ModelMessage
from ftl_python_lib.models.sql.message_category import ModelMessageCategory

# revision identifiers, used by Alembic.
revision = "e6174a640536"
down_revision = "9327be67cff7"
branch_labels = None
depends_on = None
create_trigger = """
    CREATE TRIGGER after___tablename___insert
    BEFORE INSERT
    ON __tablename__ FOR EACH ROW
    IF NEW.reference_id IS NULL THEN
        SET NEW.reference_id = NEW.id;
    END IF;
"""
drop_trigger = f"DROP TRIGGER IF EXISTS after_{ModelMessage.__tablename__}_insert;"


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        ModelMessage.__tablename__,
        sa.Column("id", sa.CHAR(length=36), nullable=False, autoincrement=False),
        sa.Column("reference_id", sa.CHAR(length=36), nullable=True),
        sa.Column("child_id", sa.CHAR(length=36), nullable=True),
        sa.Column("unique_key", sa.String(length=100), nullable=False),
        sa.Column("description", sa.TEXT, nullable=True),
        sa.Column("org", sa.TEXT, nullable=True),
        sa.Column("url", sa.TEXT, nullable=True),
        sa.Column("storage_path", sa.TEXT, nullable=False),
        sa.Column("unique_type", sa.String(length=100), nullable=False),
        sa.Column("version_major", sa.String(length=100), nullable=False),
        sa.Column("version_minor", sa.String(length=100), nullable=False),
        sa.Column("version_patch", sa.String(length=100), nullable=False),
        sa.Column(
            "active", sa.BOOLEAN(), server_default=sa.text("true"), nullable=False
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("category_id", sa.CHAR(length=36), nullable=False),
        sa.Column("created_by", sa.CHAR(length=36), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.CHAR(length=36), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_foreign_key(
        ModelMessage.__tablename__ + "_fk_created_by",
        ModelMessage.__tablename__,
        ModelMember.__tablename__,
        ["created_by"],
        ["id"],
    )

    op.create_foreign_key(
        ModelMessage.__tablename__ + "_fk_category_id",
        ModelMessage.__tablename__,
        ModelMessageCategory.__tablename__,
        ["category_id"],
        ["id"],
    )

    op.execute(create_trigger.replace("__tablename__", ModelMessage.__tablename__))

    op.create_unique_constraint(
        ModelMessage.__tablename__ + "unique_key",
        ModelMessage.__tablename__,
        [
            "unique_type",
            "version_major",
            "version_minor",
            "version_patch",
            "deleted_at",
            "deleted_by",
        ],
    )

    op.create_index(
        "unique_key", ModelMessage.__tablename__, ["unique_key"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(drop_trigger)
    op.drop_constraint(
        ModelMessage.__tablename__ + "_fk_created_by",
        ModelMessage.__tablename__,
        type_="foreignkey",
    )
    op.drop_constraint(
        ModelMessage.__tablename__ + "_fk_category_id",
        ModelMessage.__tablename__,
        type_="foreignkey",
    )
    op.drop_index("unique_key", table_name=ModelMessage.__tablename__)
    op.drop_table(ModelMessage.__tablename__)
    # ### end Alembic commands ###
