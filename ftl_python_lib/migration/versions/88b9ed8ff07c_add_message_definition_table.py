"""add message definition table

Revision ID: 88b9ed8ff07c
Revises: e6174a640536
Create Date: 2022-05-11 17:45:58.842150

"""
import sqlalchemy as sa
from alembic import op

from ftl_python_lib.models.sql.member import ModelMember
from ftl_python_lib.models.sql.message import ModelMessage
from ftl_python_lib.models.sql.message_definition import ModelMessageDefinition

# revision identifiers, used by Alembic.
revision = "88b9ed8ff07c"
down_revision = "e6174a640536"
branch_labels = None
depends_on = None


create_trigger = """
    CREATE TRIGGER after___tablename___insert
    BEFORE INSERT
    ON __tablename__ FOR EACH ROW
    IF NEW.reference_id IS NULL THEN
        SET NEW.reference_id = NEW.id;
    END IF;
"""
drop_trigger = (
    f"DROP TRIGGER IF EXISTS after_{ModelMessageDefinition.__tablename__}_insert;"
)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        ModelMessageDefinition.__tablename__,
        sa.Column("id", sa.CHAR(length=36), nullable=False, autoincrement=False),
        sa.Column("reference_id", sa.CHAR(length=36), nullable=True),
        sa.Column("child_id", sa.CHAR(length=36), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("type", sa.TEXT, nullable=True),
        sa.Column("activated_at", sa.DateTime(), nullable=True),
        sa.Column("message_id", sa.CHAR(length=36), nullable=False),
        sa.Column("xsd_tag", sa.TEXT, nullable=True),
        sa.Column("annotation_name", sa.String(length=255), nullable=True),
        sa.Column("annotation_definition", sa.TEXT, nullable=True),
        sa.Column("parent_id", sa.CHAR(length=36), nullable=True),
        sa.Column("level", sa.SMALLINT, nullable=True),
        sa.Column(
            "is_leaf", sa.BOOLEAN(), server_default=sa.text("true"), nullable=False
        ),
        sa.Column("target_column", sa.String(length=255), nullable=True),
        sa.Column("target_type", sa.String(length=255), nullable=True),
        sa.Column("element_index", sa.Integer, nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("created_by", sa.CHAR(length=36), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.CHAR(length=36), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_foreign_key(
        ModelMessageDefinition.__tablename__ + "_fk_created_by",
        ModelMessageDefinition.__tablename__,
        ModelMember.__tablename__,
        ["created_by"],
        ["id"],
    )

    op.create_foreign_key(
        ModelMessageDefinition.__tablename__ + "_fk_message_id",
        ModelMessageDefinition.__tablename__,
        ModelMessage.__tablename__,
        ["message_id"],
        ["id"],
    )

    op.execute(
        create_trigger.replace("__tablename__", ModelMessageDefinition.__tablename__)
    )

    op.create_index(
        "name", ModelMessageDefinition.__tablename__, ["name"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(drop_trigger)
    op.drop_constraint(
        ModelMessageDefinition.__tablename__ + "_fk_created_by",
        ModelMessageDefinition.__tablename__,
        type_="foreignkey",
    )
    op.drop_constraint(
        ModelMessageDefinition.__tablename__ + "_fk_message_id",
        ModelMessageDefinition.__tablename__,
        type_="foreignkey",
    )
    op.drop_index("name", table_name=ModelMessageDefinition.__tablename__)
    op.drop_table(ModelMessageDefinition.__tablename__)
    # ### end Alembic commands ###
